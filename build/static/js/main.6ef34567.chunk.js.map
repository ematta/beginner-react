{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","input","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","onSubmit","this","className","type","ref","required","placeholder","defaultValue","onClick","handleClick","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","console","log","fetch","storeId","context","store","post","data","user","setState","logout","auth","signOut","provider","authProvider","signInWithPopup","then","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","sampleFishes","Date","now","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.6ef34567.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\",\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\",\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\n\nexport default class StorePicker extends React.Component {\n  input = React.createRef();\n  goToStore = event => {\n    // 1. Stop form from submitting\n    event.preventDefault();\n    // 2. Get text from input\n    const storeName = this.input.current.value;\n    // 3. change page to /store/[input-text]\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <>\n        {/* comment */}\n        <form onSubmit={this.goToStore} className=\"store-selector\">\n          <h2>Please enter a store</h2>\n          <input\n            type=\"text\"\n            ref={this.input}\n            required\n            placeholder=\"Store Name\"\n            defaultValue={getFunName()}\n          />\n          <button type=\"submit\" onClick={this.handleClick}>\n            Visit store\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n  <>\n    <header className=\"top\">\n      <h1>\n        Catch\n        <span className=\"ofThe\">\n          <span className=\"of\">Of</span>\n          <span className=\"the\">The</span>\n        </span>\n        Day\n      </h1>\n      <h3 className=\"tagline\">\n        <span>{props.tagline}</span>\n      </h3>\n    </header>\n  </>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key: { key },\n      timeout: { enter: 500, exit: 500 },\n    };\n    // make sure fish loaded before we continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          Sorry, {fish ? fish.name : \"fish\"} is no longer available\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <>\n        <div className=\"order-wrap\">\n          <h2>Order</h2>\n          <TransitionGroup component=\"ul\" className=\"order\">\n            {orderIds.map(this.renderOrder)}\n          </TransitionGroup>\n          <div className=\"total\">\n            Total:\n            <strong>{formatPrice(total)}</strong>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nOrder.propTypes = {\n  removeFromOrder: PropTypes.func,\n  fishes: PropTypes.object,\n  order: PropTypes.object,\n};\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n  createFish = event => {\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addFish(fish);\n    // refresh form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nAddFishForm.propTypes = {\n  addFish: PropTypes.func.isRequired,\n};\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  handleChange = event => {\n    //take copy of fish\n    const updatedFish = {\n      ...this.props.fishes,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nEditFishForm.propTypes = {\n  fish: PropTypes.object,\n  fishes: PropTypes.object,\n  updateFish: PropTypes.func,\n  index: PropTypes.string,\n  deleteFish: PropTypes.func,\n};\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <>\n    <nav className=\"login\">\n      <h2> Inventory login </h2>\n      <p>Sign in to manage store inventory</p>\n      <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n        Log in with Github\n      </button>\n      <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n        Log in with Twitter\n      </button>\n      <button\n        className=\"facebook\"\n        onClick={() => props.authenticate(\"Facebook\")}\n      >\n        Log in with Facebook\n      </button>\n    </nav>\n  </>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyCgQUFVdDkmz67U-FxxTi8yycO7zEBiU6w\",\n  authDomain: \"catch-of-the-day-enrique-98c09.firebaseapp.com\",\n  databaseURL:\n    \"https://catch-of-the-day-enrique-98c09-default-rtdb.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React from \"react\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  state = {\n    uid: null,\n    owner: null,\n  };\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n  authHandler = async authData => {\n    console.log(authData);\n    // 1. look up current store in db\n    const store = await base.fetch(this.props.storeId, { context: this });\n    // 2. claim it if there is no owner\n    if (!store.owner) {\n      base.post(`${this.props.storeId}/owner`, { data: authData.user.uid });\n    }\n    // 3. set state of inventory component to reflect current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n  render() {\n    const logout = <button onClick={this.logout}>Logout!</button>;\n    // check if logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    // check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner</p>\n          {logout}\n        </div>\n      );\n    }\n    // they ust be the owner, just render the inventory\n    return (\n      <>\n        <div className=\"inventory\">\n          <h2>Inventory</h2>\n          {logout}\n          {Object.keys(this.props.fishes).map(key => (\n            <EditFishForm\n              updateFish={this.props.updateFish}\n              deleteFish={this.props.deleteFish}\n              key={key}\n              index={key}\n              fish={this.props.fishes[key]}\n            />\n          ))}\n          <AddFishForm addFish={this.props.addFish} />\n          <button onClick={this.props.loadSampleFishes}>\n            Load Sample Fishes\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nInventory.propTypes = {\n  addFish: PropTypes.func,\n  loadSampleFishes: PropTypes.func,\n  updateFish: PropTypes.func,\n  deleteFish: PropTypes.func,\n  fishes: PropTypes.object,\n};\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <>\n        <li className=\"menu-fish\">\n          <img src={image} alt={name} />\n          <h3 className=\"fish-name\">\n            {name}\n            <span className=\"price\">{formatPrice(price)}</span>\n          </h3>\n          <p>{desc}</p>\n          <button\n            disabled={!isAvailable}\n            onClick={() => this.props.addToOrder(this.props.index)}\n          >\n            {isAvailable ? \"Add to Order\" : \"Sold out!\"}\n          </button>\n        </li>\n      </>\n    );\n  }\n}\n\nFish.propTypes = {\n  addToOrder: PropTypes.func,\n  index: PropTypes.string,\n  details: PropTypes.shape({\n    image: PropTypes.string,\n    name: PropTypes.string,\n    desc: PropTypes.string,\n    status: PropTypes.string,\n    price: PropTypes.number,\n  }),\n};\n\nexport default Fish;\n","import { div } from \"prelude-ls\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nexport default class App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\",\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addFish = fish => {\n    // 1. Take a copy of existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add new fish to fishes\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. set new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = updatedFish;\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = null;\n    this.setState({ fishes });\n  };\n\n  addToOrder = key => {\n    const order = { ...this.state.order };\n    // add or update order\n    order[key] = order[key] + 1 || 1;\n    //update state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    const order = { ...this.state.order };\n    // add or update order\n    delete order[key];\n    //update state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst NotFound = props => (\n  <>\n    <h2>Not Found!</h2>\n  </>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}